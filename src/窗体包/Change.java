/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package 窗体包;

import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.awt.event.*;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Administrator
 */
public class Change extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    DefaultTableModel tableModel=new DefaultTableModel();
    JPanel jp=new JPanel();
    JTable table=new JTable(tableModel);
    JScrollPane tableScrollPane=new JScrollPane(table);
    JButton jb1=new JButton();
    
    JButton jb2=new JButton();
    public Change() {
        while(tableModel.getRowCount()>0) { /*清空表格内容*/
            tableModel.removeRow(tableModel.getRowCount()-1);
        }
        tableModel.addColumn("姓名");
        tableModel.addColumn("购买商品");
        tableModel.addColumn("商品价格");
        tableModel.addColumn("购买日期");
        jp.setLayout(null);
        tableScrollPane.setBounds(0,10,400,300);
        jb1.setBounds(65, 320, 70, 40);
        jb2.setBounds(265, 320, 70, 40);
        jp.add(tableScrollPane);
        jb1.setText("保存");
        jb2.setText("返回");
        jp.add(jb1);
        jp.add(jb2);
        jb1.addActionListener(new ActionListener(){ /*按钮1事件【将表格内容写入文件】*/
            public void actionPerformed(ActionEvent e){
                int i,j;
                final int R=table.getRowCount();
                final int L=table.getColumnCount();
                String[] str=new String[R];
                for(i=0;i<R;i++){
                    String s=(String) table.getValueAt(i, 0);
                    str[i]=s+",";
                }
                /*
                先读取第一列的内容将null变成第一列内容
                后面从此基础上从第二列开始读起
                避免第一列变成【null姓名】的情况
                */
                for(i=0;i<R;i++){
                    for(j=1;j<L-1;j++){
                        String s=(String) table.getValueAt(i,j);
                        str[i]=str[i]+s+","; //最后一列不读 因为不能加【,】
                    }
                    str[i]=str[i]+table.getValueAt(i,j)+'\n'; //读取最后一列并加【\n】
                }
                try{
                  File f=new File("Consumer.txt");
                  if(!f.exists()) throw new FileNotFoundException();
                  FileWriter FW=new FileWriter(f.getAbsolutePath(),false);
                  for(i=0;i<R;i++){
                      FW.write(str[i]);
                  }
                  FW.close();
                }catch(FileNotFoundException ex){
                     System.out.println("找不到文件");
                } catch (IOException ex) {
                    Logger.getLogger(Change.class.getName()).log(Level.SEVERE, null, ex);
                }catch(Exception ex){
                    System.out.println("未知的错误");
                }
                  
           }
        });
        jb2.addActionListener(new ActionListener(){  /*按钮2事件【返回主界面】*/
               public void actionPerformed(ActionEvent e){
                      dispose();
                      MainReal a=new MainReal();
                      a.setVisible(true);
            }
        });
        this.setSize(400, 400);
        this.add(jp);
        this.setResizable(false);
        this.setVisible(true);
        try{
          File f=new File("Consumer.txt");
          if(!f.exists()) throw new FielNotFoundException();
          FileReader FR=new FileReader (f.getAbsolutePath());
          BufferedReader  BR=new BufferedReader(FR);
          
          String str=null;
          while((str=BR.readLine())!=null){
              String []s=str.split(",");
              tableModel.addRow(s);
          }
          BR.close();
          FR.close();
         }catch(FielNotFoundException ex){
             System.out.println("找不到文件");
         }catch(Exception ex){
              System.out.println("未知的错误");
         }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
  public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
 /*       try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Change.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Change.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Change.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Change.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
     */   //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Change().setVisible(true);               
            }
            

        });
    }

    private static class FielNotFoundException extends Exception{

        public FielNotFoundException() {
            super();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
